/*
 * Copyright (C) 2017 Bengt Martensson
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.harctoolbox.transmogrifiergui;

import java.util.logging.Level;
import java.util.logging.Logger;
import org.harctoolbox.guicomponents.Console;

public class ConsoleInternalFrame extends javax.swing.JInternalFrame {

    private final static Logger logger = Logger.getLogger(Gui.class.getName());

    private static ConsoleInternalFrame instance = null;

    static ConsoleInternalFrame newConsoleInternalFrame() {
        if (instance != null)
            throw new UnsupportedOperationException();
        instance = new ConsoleInternalFrame();
        return instance;
    }

    private static class LoggerErrorFunction implements Console.IErrorFunction {

        @Override
        public void err(Exception ex, String message) {
            if (ex == null)
                logger.severe(message);
            else
                logger.log(Level.SEVERE, "{0}: {1}", new Object[]{ex.getLocalizedMessage(), message});
        }

        @Override
        public void err(String str) {
            logger.severe(str);
        }
    }

    /**
     * Creates new form ConsoleInternalFrame
     */
    public ConsoleInternalFrame() {
        initComponents();

        console.setErrorFunction(new LoggerErrorFunction());
        console.setStdErr();
        console.setStdOut();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        console = new org.harctoolbox.guicomponents.Console();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Console");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(console, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(console, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.harctoolbox.guicomponents.Console console;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the instance
     */
    public static ConsoleInternalFrame getInstance() {
        return instance;
    }

    /**
     * @return the console
     */
    public org.harctoolbox.guicomponents.Console getConsole() {
        return console;
    }
}
